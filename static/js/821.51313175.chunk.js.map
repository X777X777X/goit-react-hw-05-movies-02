{"version":3,"file":"static/js/821.51313175.chunk.js","mappings":"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","sources":["api.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nimport noImage from './components/images/noImage.png';\nimport Error404 from './components/images/Error404.jpeg';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: 'efeda743ab45883687fff04b1ed36428' };\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => { return { poster: Error404 };\n      \n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noImage,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    max-width: 600px;\n    display: flex;\n    jastyfy-contenr: center\n    max-width: 600px;;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n}`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    color: #3f51b550;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #3f51b5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchByQuery } from \"api\";\nimport {\n  FormDiv,\n  Form,\n  Input,\n  Btn,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Image,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const location = useLocation();\n    const searchQuery = searchParams.get('query');\n\n    useEffect(() => {\n        searchQuery && fetchByQuery(searchQuery).then(setMovies);\n    }, [searchQuery]);\n\n    const handleSubmit = async e => {\n      e.preventDefault();\n\n      const res = await fetchByQuery(query);\n      setMovies(res);\n      setSearchParams({ query });\n      setQuery('');\n    };\n    const onChange = e => {\n      setQuery(e.target.value);\n    };\n    return (\n        <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Btn type=\"submit\">Search</Btn>\n        </Form>\n      </FormDiv>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, poster }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Image src={poster} alt={title} />\n                <MovieTitle>\n                  <h3>{title}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["axios","api_key","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","Error404","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","noImage","fetchMovieReviews","author","content","FormDiv","styled","Form","Input","Btn","MovieList","MovieItem","MovieLink","Link","Image","MovieTitle","useState","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","e","preventDefault","res","onSubmit","type","value","onChange","target","length","to","state","from","src","alt"],"sourceRoot":""}