{"version":3,"file":"static/js/627.65d7a573.chunk.js","mappings":"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","sources":["api.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\nimport noImage from './components/images/noImage.png';\nimport Error404 from './components/images/Error404.jpeg';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: 'efeda743ab45883687fff04b1ed36428' };\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => { return { poster: Error404 };\n      \n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noImage,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      return { poster: Error404 };\n    });\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\nbackground-image: url(\"../../components/images/Simply-Recipes-Perfect-Popcorn-LEAD-41-4a75a18443ae45aa96053f30a3ed0a6b.jpeg\");\nbackground-size: cover;\nbackground-position: center;\nbackground-repeat: no-repeat;\n\n}\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #3fc50a;\n  margin: 30px, 0;\n  text-decoration: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: #3fc50a;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 220px;\n  margin: 12px;\n  border-radius: 10px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 250ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.5);\n    box-shadow: rgb(0 0 0 / 40%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 290px;\n  width: 100%;\n  display: block;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n  margin: 0px;\n  font-size: 12px;\n  color: #ffffff;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { fetchTrending } from \"api\";\nimport {\n    HomeContainer, HomeTitle, MovieList, MovieItem, MovieLink, Image,\n    MovieTitle\n} from './Home.styled';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    useEffect(() => {\n        fetchTrending().then(setMovies);\n    }, []);\n\n    return (\n        <HomeContainer>\n            <HomeTitle>Tranding Film Today</HomeTitle>\n            {movies.length > 0 && (\n                <MovieList>\n                    {movies.map(({ id, title, poster }) => (\n                        <MovieItem key={id}>\n                            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                                <Image src={poster} alt={title} />\n                                <MovieTitle>\n                                    <h3>{title}</h3>\n                                </MovieTitle>\n                            </MovieLink>\n                        </MovieItem>\n                    ))}\n                </MovieList>\n            )}\n        </HomeContainer>\n    );\n};\n\nexport default Home;"],"names":["axios","api_key","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","Error404","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","noImage","fetchMovieReviews","author","content","HomeContainer","styled","HomeTitle","MovieList","MovieItem","MovieLink","Link","Image","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","length","to","state","from","src","alt"],"sourceRoot":""}